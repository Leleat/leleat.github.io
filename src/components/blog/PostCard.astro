---
import "../../global.js";

const { post } = Astro.props;
---

<a class="card" href={post.url}>
    <span class="card-title">
        {post.frontmatter.title}
    </span>
    <span class="card-description">
        {
            post
                .rawContent()
                .split("\n")
                .find((l: string) => l.trim().length)
        }
    </span>
    <div class="card-metadata">
        <div>
            {/* https://icons.getbootstrap.com/icons/calendar/ */}
            <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                fill="currentColor"
                viewBox="0 0 16 16"
            >
                <path
                    d="M3.5 0a.5.5 0 0 1 .5.5V1h8V.5a.5.5 0 0 1 1 0V1h1a2 2 0 0 1 2 2v11a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3a2 2 0 0 1 2-2h1V.5a.5.5 0 0 1 .5-.5M1 4v10a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V4z"
                ></path>
            </svg>
            <span>
                {new Date(post.frontmatter.pubDate).toLocaleDateString()}
            </span>
        </div>
        <div>
            {/* https://icons.getbootstrap.com/icons/tags-fill/ */}
            <svg
                xmlns="http://www.w3.org/2000/svg"
                width="16"
                height="16"
                fill="currentColor"
                viewBox="0 0 16 16"
            >
                <path
                    d="M2 2a1 1 0 0 1 1-1h4.586a1 1 0 0 1 .707.293l7 7a1 1 0 0 1 0 1.414l-4.586 4.586a1 1 0 0 1-1.414 0l-7-7A1 1 0 0 1 2 6.586zm3.5 4a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3"
                ></path>
                <path
                    d="M1.293 7.793A1 1 0 0 1 1 7.086V2a1 1 0 0 0-1 1v4.586a1 1 0 0 0 .293.707l7 7a1 1 0 0 0 1.414 0l.043-.043z"
                ></path>
            </svg>
            <span>
                {
                    post.frontmatter.tags.length ?
                        post.frontmatter.tags.join(", ")
                    :   "No Tags"
                }
            </span>
        </div>
    </div>
</a>

<style
    define:vars={{
        transitionName: post.frontmatter.title
            .replace(/[^a-zA-Z]/g, "")
            .toLowerCase(),
    }}
>
    svg {
        min-inline-size: 1rem;
        min-block-size: 1rem;
    }

    .card {
        display: flex;
        flex-direction: column;
        background-color: var(--color-background-button);
        border: 1px solid var(--color-background-button);
        border-radius: 0.75rem;
        padding: 1.5rem;
        margin-block-start: 2rem;
        text-decoration: none;
        box-shadow: 0 0.25rem 0.5rem 0 rgba(0, 0, 0, 0.05);

        &:hover {
            background-color: transparent;
            border: 1px solid var(--color-yellow);

            & > * {
                color: var(--color-yellow);
            }
        }
    }

    & .card-title {
        color: var(--color-text);
        font-size: 1.5rem;
        font-weight: 600;
    }

    & .card-description {
        color: var(--color-text-dim);
        margin-block-start: 0.75rem;
        margin-block-end: 1.125rem;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    & .card-metadata {
        color: var(--color-text-dim);
        display: flex;
        gap: 3rem;
        font-size: smaller;

        & > * {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }

        & :nth-child(2) span {
            display: -webkit-box;
            -webkit-line-clamp: 1;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    }

    @media (prefers-reduced-motion: no-preference) {
        .card {
            view-transition-name: var(--transitionName);
        }
    }
</style>
