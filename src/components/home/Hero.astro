---
import "../../global.js";

const { class: className, ...rest } = Astro.props;
---

<section class={className} {...rest}>
    <div class="terminal-prompt" aria-hidden="true">
        <span>leleat@home</span><span>$ </span><span id="whoami-text"></span>
        <span id="cursor">█</span>
    </div>
    <h1 class="title">
        <pre
            aria-label="Anh Tuan Le">
 █████╗ ███╗   ██╗██╗  ██╗    ████████╗██╗   ██╗ █████╗ ███╗   ██╗    ██╗     ███████╗
██╔══██╗████╗  ██║██║  ██║    ╚══██╔══╝██║   ██║██╔══██╗████╗  ██║    ██║     ██╔════╝
███████║██╔██╗ ██║███████║       ██║   ██║   ██║███████║██╔██╗ ██║    ██║     █████╗
██╔══██║██║╚██╗██║██╔══██║       ██║   ██║   ██║██╔══██║██║╚██╗██║    ██║     ██╔══╝
██║  ██║██║ ╚████║██║  ██║       ██║   ╚██████╔╝██║  ██║██║ ╚████║    ███████╗███████╗
╚═╝  ╚═╝╚═╝  ╚═══╝╚═╝  ╚═╝       ╚═╝    ╚═════╝ ╚═╝  ╚═╝╚═╝  ╚═══╝    ╚══════╝╚══════╝</pre>
    </h1>
    <p>
        I'm a web developer based in <b>Berlin</b> with a love for open-source software.
        Explore my <a href="/#showcase" class="hash-link">Projects</a>, discover
        my <a href="/#skills" class="hash-link">Skills</a>, or check out my code
        and contributions on <a
            href="https://github.com/leleat"
            target="_blank"
            rel="noreferrer">GitHub</a
        >. If you'd like to know more about me, check out my still-pretty-short <a
            href="/#vita"
            class="hash-link">Vita</a
        >.
    </p>
</section>

<style>
    .terminal-prompt {
        color: var(--color-text-dim);
        font-size: 0.9rem;
        margin-block-end: 2rem;
        user-select: none;

        :first-child {
            color: #ff498f;
            background-color: #30252a;
            padding: 0.25rem 0.5rem;
            margin-inline-end: 0.75rem;
        }
    }

    a.hash-link {
        color: var(--color-yellow);

        &::before {
            content: "#";
        }
    }

    h1 + p {
        max-inline-size: 72ch;
    }

    #cursor {
        animation: blink 1.5s step-end infinite;
        user-select: none;
        visibility: hidden;
        color: var(--color-text-dim);
    }

    @keyframes blink {
        0%,
        50% {
            opacity: 1;
        }
        51%,
        100% {
            opacity: 0;
        }
    }

    section {
        display: flex;
        flex-direction: column;
        justify-content: center;
        position: relative;
        min-block-size: calc(
            100vh - var(--navbar-height) - var(--content-vpadding) * 2
        );
        top: calc(var(--navbar-height) / -2);
    }

    .terminal-prompt,
    .title {
        position: relative;
        max-width: fit-content;
        /* Phosphor glow + Chromatic aberration */
        text-shadow:
            0 0 1px currentColor,
            0 0 2px currentColor,
            0 0 4px rgba(255, 255, 255, 0.2),
            1px 0 0 rgba(255, 0, 0, 1),
            -1px 0 0 rgba(0, 255, 255, 1);

        /* Scan lines */
        &::before {
            content: "";
            position: absolute;
            inset: 0;
            background: repeating-linear-gradient(
                0deg,
                transparent 0px,
                transparent 1px,
                rgba(0, 0, 0, 0.3) 1px,
                rgba(0, 0, 0, 0.3) 2px
            );
            pointer-events: none;
            z-index: 9999;
        }
    }

    .title {
        position: relative;
        margin-block-start: 0;
        margin-block-end: 1rem;
        overflow-x: auto;
        scrollbar-width: none;
    }

    .title pre {
        margin: 0;
        font-size: 0.5rem;
        color: var(--color-yellow);
        user-select: none;
    }

    @media (min-width: 60rem) {
        .title::after {
            transform: skewY(-2deg) skewX(-25deg);
        }

        .title pre {
            font-size: 0.7rem;
        }

        section {
            min-block-size: calc(
                100vh - var(--navbar-height) - var(--content-vpadding) * 2 -
                    28rem
            );
            top: 0;
        }
    }

    @media (min-width: 80rem) {
        .title::after {
            transform: skewY(-2deg) skewX(-25deg);
        }

        section {
            min-block-size: calc(
                100vh - var(--navbar-height) - var(--content-vpadding) * 2 -
                    23rem
            );
            top: 0;
        }
    }

    @media (prefers-reduced-motion: reduce) {
        #cursor {
            animation: none;
        }
    }
</style>

<script>
    const whoamiText = "whoami";
    const whoamiEl = document.getElementById("whoami-text");
    const cursorEl = document.getElementById("cursor");
    const prefersReducedMotion = window.matchMedia(
        "(prefers-reduced-motion: reduce)",
    ).matches;

    function typeWhoami(): Promise<void> {
        return new Promise((resolve) => {
            let index = 0;

            function typeNextChar() {
                if (index < whoamiText.length) {
                    if (whoamiEl) {
                        whoamiEl.textContent =
                            whoamiText.slice(0, index + 1) + "█";
                    }

                    index++;
                    setTimeout(typeNextChar, 150);
                } else {
                    if (whoamiEl) {
                        whoamiEl.textContent = whoamiText;
                    }

                    resolve();
                }
            }

            typeNextChar();
        });
    }

    async function runAnimation() {
        if (!whoamiEl || !cursorEl) {
            return;
        }

        await typeWhoami();

        cursorEl.style.visibility = "visible";
    }

    if (prefersReducedMotion) {
        if (whoamiEl) {
            whoamiEl.textContent = whoamiText;
        }

        if (cursorEl) {
            cursorEl.style.visibility = "visible";
        }
    } else {
        setTimeout(runAnimation, 400);
    }
</script>
